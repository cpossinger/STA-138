knitr::opts_knit$set(root.dir = wd)
angina <- read.csv("/angina.csv")
angina <- read.csv("angina.csv")
angina %>% summary
angina %>% str
?read.csv
library(dplyr)
angina %>% str
angina %<>% select(y,myofam,age)
angina %>% str
no_interact <- glm(y ~ myfam + age, data = angina, family = "binomial")
no_interact <- glm(y ~ myofam + age, data = angina, family = "binomial")
no_interact %>% summary
no_interact %>% str
no_interact %>% summary
no_interact$coefficients
no_interact$coefficients %>% str
est_params <- data.frame("Parameter" = c("Alpha","Beta 1","Beta 2"),
no_interact$coefficients)
est_params
est_params <- data.frame("Parameter" = c("Alpha","Beta 1","Beta 2"),
"Estimated_Values" = no_interact$coefficients)
est_params <- data.frame("Parameter" = c("Alpha","Beta 1","Beta 2"),
paste0("Estimated","Values") = no_interact$coefficients)
est_params <- data.frame("Parameter" = c("Alpha","Beta 1","Beta 2"),
"Estimated Values" = no_interact$coefficients)
est_params
est_params <- data.frame("Parameter" = c("Alpha","Beta 1","Beta 2"),
"Estimated_Values" = no_interact$coefficients)
est_params %>% kbl
no_interact %>% str
no_interact$effects
est_params %>% kbl
no_interact %>% summary
angina %>% filter(age = 50, myofam = 1)
angina %>% filter(age == 50, myofam == 1)
angina %>% str
angina %>% filter(age == 50, myofam == "yes")
angina %>% filter(age == 50)
angina$myofam %>% as.numeric()
angina$myofam
angina$myofam %>% as.factor()
angina$myofam %>% as.numeric()
angina$myofam %>% as.logical()
library(stringr)
angina$myofam %>% str_replace("no","false")
angina$myofam %>% str_replace("yes","true")
angina$myofam %<>% str_replace("no","false")
angina$myofam %<>% str_replace("yes","true")
angina$myofam %<>% as.logical %>% as.integer
angina$myofam %>% tabel
angina$myofam %>% table
no_interact <- glm(y ~ myofam + age, data = angina, family = "binomial")
est_params <- data.frame("Parameter" = c("Alpha","Beta 1","Beta 2"),
"Estimated_Values" = no_interact$coefficients)
est_params %>% kbl
est_log_odds <- alpha + beta_1*1 + beta_2*50
alpha <- no_interact$coefficients[1]
beta_1 <- no_interact$coefficients[2]
beta_2 <- no_interact$coefficients[3]
est_log_odds <- alpha + beta_1*1 + beta_2*50
est_odds <- alpha + beta_1*1 + beta_2*50
est_prob = est_odds / (1 + est_odds)
print(est_prob)
alpha
alpha %>% str
names(est_prob) <- NULL
print(est_prob)
fitted_odds <- no_interact$fitted.values
fitted_odds %>% str
names(fitted_odds) <- NULL
?glm
fitted_odds <- no_interact$fitted.values
fitted_odds <- no_interact$fitted.values %>% unname
fitted_odds %>% str
```{r}
alpha <-  no_interact$coefficients[1] %>% unname
beta_1 <- no_interact$coefficients[2] %>% unname
beta_2 <- no_interact$coefficients[3] %>% unname
est_odds <- alpha + beta_1*1 + beta_2*50
est_prob = est_odds / (1 + est_odds)
print(est_prob)
library(ggplot2)
n <- fitted_odds %>% length
n <- 1:(fitted_odds %>% length)
plot_data <- data.frame(n,fitted_odds)
ggplot()+geom_line(data = plot_data, aes(n,fitted_odds))
ggplot()+geom_line(data = plot_data, aes(n,fitted_odds))+xlab("Observations")+ylab("Fitted Log-Odds")
ggplot()+geom_line(data = plot_data, aes(n,fitted_odds))+xlab("Patients")+ylab("Fitted Log-Odds")
fitted_probs = fitted_odds / (1 + fitted_odds)
fitted_odds_plot <- ggplot()+geom_line(data = plot_data, aes(n,fitted_odds))+xlab("Patients")+ylab("Fitted Log-Odds")
fitted_probs_plot <- ggplot()+geom_line(data = plot_data, aes(n,fitted_probs))+xlab("Patients")+ylab("Fitted Probabilities")
library(ggpubr)
ggarrange(fitted_odds_plot, fitted_probs_plot, nrow = 1)
fitted_odds_plot <- ggplot()+geom_bar(data = plot_data, aes(n,fitted_odds))+xlab("Patients")+ylab("Fitted Log-Odds")
fitted_probs_plot <- ggplot()+geom_line(data = plot_data, aes(n,fitted_probs))+xlab("Patients")+ylab("Fitted Probabilities")
ggarrange(fitted_odds_plot, fitted_probs_plot, nrow = 1)
fitted_odds_plot <- ggplot()+geom_bar(data = plot_data, aes(y = fitted_odds))+xlab("Patients")+ylab("Fitted Log-Odds")
fitted_probs_plot <- ggplot()+geom_line(data = plot_data, aes(n,fitted_probs))+xlab("Patients")+ylab("Fitted Probabilities")
ggarrange(fitted_odds_plot, fitted_probs_plot, nrow = 1)
fitted_odds_plot <- ggplot()+geom_line(data = plot_data, aes(n,fitted_odds))+xlab("Patients")+ylab("Fitted Log-Odds")
fitted_probs_plot <- ggplot()+geom_line(data = plot_data, aes(n,fitted_probs))+xlab("Patients")+ylab("Fitted Probabilities")
ggarrange(fitted_odds_plot, fitted_probs_plot, nrow = 1)
est_odds_ratios <- data.frame("Parameter" = c("Alpha","Beta 1","Beta 2"),
"Estimated_Values" = no_interact$coefficients %>% exp)
est_odds_ratios %>% kbl
est_odds_ratios <- data.frame("Myocardial_Infarction" = c("Yes","No"),
"Estimated_Odds_Ratios" = no_interact$coefficients %>% exp)
est_odds_ratios %>% kbl
plot_data <- data.frame(n,fitted_odds,fitted_probs,angina$age, angina$myofam)
plot_data <- data.frame(n,fitted_odds,fitted_probs,"age" = angina$age, "myofam" =  angina$myofam)
plot_data %>% str
fitted_odds_plot <- ggplot()+geom_line(data = plot_data, aes(x = age, y = fitted_odds,color = myofam))+xlab("Age")+ylab("Fitted Log-Odds")
fitted_odds_plot
plot_data <- data.frame(n,fitted_odds,fitted_probs,"age" = angina$age, "myofam" =  angina$myofam %>% as.factor)
fitted_odds_plot <- ggplot()+geom_line(data = plot_data, aes(x = age, y = fitted_odds,color = myofam))+xlab("Age")+ylab("Fitted Log-Odds")
fitted_odds_plot
angina <- read.csv("angina.csv")
angina %<>% select(y,myofam %>% as.factor,age)
angina <- read.csv("angina.csv")
angina %<>% select(y,myofam,age)
angina$myofam %>% as.factor
no_interact <- glm(y ~ myofam + age, data = angina, family = "binomial")
est_params <- data.frame("Parameter" = c("Alpha","Beta 1","Beta 2"),
"Estimated_Values" = no_interact$coefficients)
est_params %>% kbl
alpha <-  no_interact$coefficients[1] %>% unname
beta_1 <- no_interact$coefficients[2] %>% unname
beta_2 <- no_interact$coefficients[3] %>% unname
est_odds <- alpha + beta_1*1 + beta_2*50
est_prob = est_odds / (1 + est_odds)
print(est_prob)
fitted_odds <- no_interact$fitted.values %>% unname
fitted_probs = fitted_odds / (1 + fitted_odds)
n <- 1:(fitted_odds %>% length)
plot_data <- data.frame(n,fitted_odds,fitted_probs,"age" = angina$age, "myofam" =  angina$myofam %>% as.factor)
fitted_odds_plot <- ggplot()+geom_line(data = plot_data, aes(x = age, y = fitted_odds,color = myofam))+xlab("Age")+ylab("Fitted Log-Odds")
fitted_probs_plot <- ggplot()+geom_line(data = plot_data, aes(x = age, y = fitted_probs,color = myofam))+xlab("Age")+ylab("Fitted Probabilities")
ggarrange(fitted_odds_plot, fitted_probs_plot, nrow = 1)
?predict
no_interact %>% predict(newdata = c(1,50))
no_interact %>% predict(newdata = list(1,50))
no_interact %>% predict(newdata = list("myofam" = 1,"age" = 50))
no_interact %>% predict(newdata = list("myofam" = "yes","age" = 50))
est_odds
est_odds <- no_interact %>% predict(newdata = list("myofam" = "yes", "age" = 50)) %>% unname
est_prob = est_odds / (1 + est_odds)
print(est_prob)
knitr::opts_chunk$set(echo = TRUE)
wd <- "/home/cam/Documents/STA 138/Homework"
knitr::opts_knit$set(root.dir = wd)
largework <- read.csv("/largework.csv")
wd <- "/home/cam/Documents/STA 138/Homework"
knitr::opts_knit$set(root.dir = wd)
largework <- read.csv("/largework.csv")
largework <- read.csv("largework.csv")
largework %>% str
library(magrittr)
library(kableExtra)
library(kableExtra)
library(dplyr)
library(stringr)
library(dplyr)
library(stringr)
library(ggplot2)
library(ggpubr)
largework %>% str
largework$gender %<>% as.factor
largework$marriage %<>% as.factor
largework$y %<>% as.factor
?sample
largework_len <- largework_len %>% length
largework_len <- largework %>% length
largework_len <- largework %>% nrow
?sample_frac
train_set <- largework %>% sample(size = largework_len / 2)
largework_len
largework_len / 2
largework_len <- largework %>% nrow %>% round
train_set <- largework %>% sample(size = largework_len / 2)
train_set <- largework %>% sample(size = (largework_len / 2))
?sample
?slice_sample
train_set <- largework %>% slice_sample(prop = 0.5)
?sample
sample(nrow(largework), largework_len / 2)
sample(nrow(largework), largework_len / 2) %>% length
train_set_ind <- sample(size = largework_len, n = largework_len / 2)
train_set_ind <- sample(largework_len,largework_len / 2)
train_set <- largework[train_set_ind,]
set.seed(502)
largework_len <- largework %>% length
train_set_ind <- sample(largework_len,largework_len / 2)
largework_len <- largework %>% length
largework_len <- largework %>% nrow
train_set_ind <- sample(largework_len,largework_len / 2)
set.seed(502)
largework_len <- largework %>% nrow
train_set_ind <- sample(largework_len,largework_len / 2)
?set.seed
set.seed(502)
largework_len <- largework %>% nrow
train_set_ind <- sample(largework_len,largework_len / 2)
largework_len <- largework %>% nrow
train_set_ind <- sample(largework_len,largework_len / 2)
set.seed(502)
largework_len <- largework %>% nrow
train_set_ind <- sample(largework_len,largework_len / 2)
set.seed(502)
largework_len <- largework %>% nrow
train_set_ind <- sample(largework_len,largework_len / 2)
train_set_ind
-train_set_ind
train_set <- largework[train_set_ind,]
test_set <- largework[-train_set_ind,]
train_set %>% head
test_set %>% head
train_set %>% tail
test_set %>% tail()
?step
?step
colnames(largework)
best_model <- step(glm(y~1,data = largework),
scope = gender*age*marraige*min*chol*sysbp*height,
direction = "forward",
trace = 0)
?glm
best_model <- step(glm(y~1,family = "binomial",data = largework),
scope = ~GENDER*AGE*MARRAIGE*MIN*CHOL*SYSBP*HEIGHT,
direction = "forward",
trace = 0)
best_model <- step(glm(y~1,family = "binomial",data = largework),
scope = ~gender*age*marraige*min*chol*sysbp*height,
direction = "forward",
trace = 0)
best_model <- step(glm(y~1,family = "binomial",data = largework),
scope = ~gender*age*marriage*min*chol*sysbp*height,
direction = "forward",
trace = 0)
print(best_model$formula)
summary(best_model)
best_model$coefficients
best_model_sum <- best_model %>% summary
best_model_sum$coefficients[,c(1,4)]
best_model <- step(glm(y~1,family = "binomial",data = train_set),
scope = ~gender*age*marriage*min*chol*sysbp*height,
direction = "forward",
trace = 0)
print(best_model$formula)
best_model <- step(glm(y~1,family = "binomial",data = train_set),
scope = ~gender*age*marriage*min*chol*sysbp*height,
direction = "forward",
trace = 0)
print(best_model$formula)
best_model <- step(glm(y~1,family = "binomial",data = train_set),
scope = ~gender*age*marriage*min*chol*sysbp*height,
direction = "forward",
trace = 0)
print(best_model$formula)
best_model_sum <- glm(y ~ chol + sysbp + gender + height:chol + heigh:sysbp + sysbp:gender, "binomial", test_set)
best_model_sum <- glm(y ~ chol + sysbp + gender + height:chol + height:sysbp + sysbp:gender, "binomial", test_set)
best_model_sum$coefficients[,c(1,4)]
best_model_sum <- glm(y ~ chol + sysbp + gender + height:chol + height:sysbp + sysbp:gender, "binomial", test_set) %>% summary
best_model_sum$coefficients[,c(1,4)]
knitr::opts_chunk$set(echo = TRUE)
wd <- "/home/cam/Documents/STA 138/Homework"
knitr::opts_knit$set(root.dir = wd)
library(kableExtra)
knitr::opts_chunk$set(echo = TRUE)
wd <- "/home/cam/Documents/STA 138/Homework"
knitr::opts_knit$set(root.dir = wd)
library(magrittr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(purrr)
library(reshape2)
library(ggpubr)
library(rlang)
library(purrr)
library(reshape2)
library(ggpubr)
library(rlang)
library(caret)
library(tidyr)
library(ggplot2)
library(purrr)
library(reshape2)
library(ggpubr)
library(rlang)
library(caret)
library(ggcorrplot)
bys_data <- read.csv("Byssinosis.csv")
knitr::opts_chunk$set(echo = TRUE)
wd <- "/home/cam/Documents/STA 138/Homework"
knitr::opts_knit$set(root.dir = wd)
bys_data <- read.csv("Byssinosis.csv")
bys_data <- read.csv("Byssinosis.csv")
wd <- "/home/cam/Documents/STA 138/Homework"
knitr::opts_knit$set(root.dir = wd)
bys_data <- read.csv("Byssinosis.csv")
bys_data <- read.csv("Byssinosis.csv")
bys_data <- read.csv("Byssinosis.csv")
bys_data <- read.csv("/home/cam/Documents/STA 138/Project/Byssinosis.csv")
# Create longer data that is easier to plot
plot_data <- bys_data %<>% pivot_longer(cols = c(Byssinosis,Non.Byssinosis)) %>% filter(value != 0)
# Split data based on Byssinosis
plot_data_bys <- plot_data %>% filter(name == "Byssinosis", value != 0)
plot_data_no_bys <- plot_data %>% filter(name == "Non.Byssinosis", value != 0)
data.frame("Byssinosis" = plot_data_bys$value %>% sum,"No_Byssinosis" = plot_data_no_bys$value %>% sum) %>% kbl
plot_list_bys <- colnames(plot_data_bys)[1:5] %>%
map(~ ggplot(data = plot_data_bys,  aes(x = factor(!!sym(.x)), y = value,fill = factor(!!sym(.x))))+
geom_label(aes(label = outlier),
na.rm = TRUE,
hjust = -0.3)+
geom_boxplot()+
xlab(.x)+
ylab("Count")+
labs(fill = .x))
plot_list_no_bys <- colnames(plot_data_no_bys)[1:5] %>%
map(~ ggplot(data = plot_data_no_bys,  aes(x = factor(!!sym(.x)), y = value,fill = factor(!!sym(.x))))+
geom_label(aes(label = outlier),
na.rm = TRUE,
hjust = -0.3)+
geom_boxplot()+
xlab(.x)+
ylab("Count")+
labs(fill = .x))
plot_list_bys <- colnames(plot_data_bys)[1:5] %>%
map(~ ggplot(data = plot_data_bys,  aes(x = factor(!!sym(.x)), y = value,fill = factor(!!sym(.x))))+
geom_label(aes(label = outlier),
na.rm = TRUE,
hjust = -0.3)+
geom_boxplot()+
xlab(.x)+
ylab("Count")+
labs(fill = .x))
plot_list_no_bys <- colnames(plot_data_no_bys)[1:5] %>%
map(~ ggplot(data = plot_data_no_bys,  aes(x = factor(!!sym(.x)), y = value,fill = factor(!!sym(.x))))+
geom_label(aes(label = outlier),
na.rm = TRUE,
hjust = -0.3)+
geom_boxplot()+
xlab(.x)+
ylab("Count")+
labs(fill = .x))
bys_plots    <- ggarrange(plotlist = plot_list_bys,ncol = 5) %>% annotate_figure(top = text_grob("Byssinosis Present", face = "bold", size = 14))
is_outlier <- function(x) {
return(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.95) + 1.5 * IQR(x))
}
plot_data_bys %<>% mutate(outlier = ifelse(is_outlier(value), rownames(plot_data_bys), as.numeric(NA)))
plot_data_no_bys %<>% mutate(outlier = ifelse(is_outlier(value), rownames(plot_data_no_bys), as.numeric(NA)))
plot_list_bys <- colnames(plot_data_bys)[1:5] %>%
map(~ ggplot(data = plot_data_bys,  aes(x = factor(!!sym(.x)), y = value,fill = factor(!!sym(.x))))+
geom_label(aes(label = outlier),
na.rm = TRUE,
hjust = -0.3)+
geom_boxplot()+
xlab(.x)+
ylab("Count")+
labs(fill = .x))
plot_list_bys <- colnames(plot_data_bys)[1:5] %>%
map(~ ggplot(data = plot_data_bys,  aes(x = factor(!!sym(.x)), y = value,fill = factor(!!sym(.x))))+
geom_label(aes(label = outlier),
na.rm = TRUE,
hjust = -0.3)+
geom_boxplot()+
xlab(.x)+
ylab("Count")+
labs(fill = .x))
plot_list_no_bys <- colnames(plot_data_no_bys)[1:5] %>%
map(~ ggplot(data = plot_data_no_bys,  aes(x = factor(!!sym(.x)), y = value,fill = factor(!!sym(.x))))+
geom_label(aes(label = outlier),
na.rm = TRUE,
hjust = -0.3)+
geom_boxplot()+
xlab(.x)+
ylab("Count")+
labs(fill = .x))
bys_plots    <- ggarrange(plotlist = plot_list_bys,ncol = 5) %>% annotate_figure(top = text_grob("Byssinosis Present", face = "bold", size = 14))
no_bys_plots <- ggarrange(plotlist = plot_list_no_bys,ncol = 5) %>% annotate_figure(top = text_grob("Byssinosis Not Present", face = "bold", size = 14))
ggarrange(bys_plots,no_bys_plots,nrow = 2)
ggarrange(bys_plots,no_bys_plots,nrow = 2)
plot_list_bys <- colnames(plot_data_bys)[1:5] %>%
map(~ ggplot(data = plot_data_bys,  aes(x = factor(!!sym(.x)), y = value,fill = factor(!!sym(.x))))+
geom_label(aes(label = outlier),
na.rm = TRUE,
hjust = -0.3)+
geom_boxplot()+
xlab(.x)+
ylab("Count")+
labs(fill = .x))
plot_list_no_bys <- colnames(plot_data_no_bys)[1:5] %>%
map(~ ggplot(data = plot_data_no_bys,  aes(x = factor(!!sym(.x)), y = value,fill = factor(!!sym(.x))))+
geom_label(aes(label = outlier),
na.rm = TRUE,
hjust = -0.3)+
geom_boxplot()+
xlab(.x)+
ylab("Count")+
labs(fill = .x))
bys_plots    <- ggarrange(plotlist = plot_list_bys,ncol = 5) %>% annotate_figure(top = text_grob("Byssinosis Present", face = "bold", size = 14))
no_bys_plots <- ggarrange(plotlist = plot_list_no_bys,ncol = 5) %>% annotate_figure(top = text_grob("Byssinosis Not Present", face = "bold", size = 14))
?ggarrange
```{r, out.width="0.3\\linewidth, fig.align = "center"}
ggarrange(bys_plots,no_bys_plots,nrow = 2)
ggarrange(bys_plots,no_bys_plots,nrow = 2)
ggarrange(bys_plots,no_bys_plots,nrow = 2)
ggarrange(bys_plots,no_bys_plots,nrow = 2) %>% ggsave("boxplots.png")
ggarrange(bys_plots,no_bys_plots,nrow = 2)
ggsave("boxplots.png")
getwd()
?ggsave
ggarrange(bys_plots,no_bys_plots,nrow = 2)
plot_data_bys[10,] %>% kbl
plot_data_bys[2,] %>% kbl
plot_data_no_bys[58,] %>% kbl
plot_data_bys[10,1:7] %>% kbl
plot_data_bys[2,1:7] %>% kbl
plot_data_no_bys[58,1:7] %>% kbl
plot_data %>% str
workspace_plot_list <- map(~ ggplot(data = plot_data,  aes(x = factor(Workspace), y = value,fill = factor(!!sym(.x))))+
geom_label(aes(label = outlier),
na.rm = TRUE,
hjust = -0.3)+
geom_boxplot()+
xlab(.x)+
ylab("Count")+
labs(fill = .x))
workspace_plot_list <- colnames(plot_data_no_bys)[1:4] %>% map(~ ggplot(data = plot_data,  aes(x = factor(Workspace), y = value,fill = factor(!!sym(.x))))+
geom_label(aes(label = outlier),
na.rm = TRUE,
hjust = -0.3)+
geom_boxplot()+
xlab(.x)+
ylab("Count")+
labs(fill = .x))
workspace_plots <- ggarrange(plotlist = workspace_plot_list,ncol = 4)
workspace_plot_list <- colnames(plot_data_no_bys)[1:4] %>% map(~ ggplot(data = plot_data,  aes(x = factor(Workspace), y = value,fill = factor(!!sym(.x))))+
geom_boxplot()+
xlab(.x)+
ylab("Count")+
labs(fill = .x))
workspace_plots <- ggarrange(plotlist = workspace_plot_list,ncol = 4)
workspace_plots
workspace_plot_list_bys <- colnames(plot_data_bys)[1:4] %>% map(~ ggplot(data = plot_data_bys,  aes(x = factor(Workspace), y = value,fill = factor(!!sym(.x))))+
geom_boxplot()+
xlab(.x)+
ylab("Count")+
labs(fill = .x))
workspace_plot_list_no_bys <- colnames(plot_data_no_bys)[1:4] %>% map(~ ggplot(data = plot_data_no_bys,  aes(x = factor(Workspace), y = value,fill = factor(!!sym(.x))))+
geom_boxplot()+
xlab(.x)+
ylab("Count")+
labs(fill = .x))
workspace_plots_bys <- ggarrange(plotlist = workspace_plot_list_bys,ncol = 4)
workspace_plots_no_bys <- ggarrange(plotlist = workspace_plot_list_no_bys,ncol = 4)
ggarrange(workspace_plot_list_bys,workspace_plot_list_no_bys,nrow = 2)
workspace_plot_list_bys
workspace_plots_bys <- ggarrange(plotlist = workspace_plot_list_bys,ncol = 4) %>% annotate_figure(top = text_grob("Byssinosis Present", face = "bold", size = 14))
workspace_plots_no_bys <- ggarrange(plotlist = workspace_plot_list_no_bys,ncol = 4) %>% annotate_figure(top = text_grob("Byssinosis Not Present", face = "bold", size = 14))
ggarrange(workspace_plots_bys,workspace_plots_no_bys,nrow = 2)
plot_data_no_bys %>% filter(Workspace == 3)
plot_data_no_bys %>% filter(Workspace == 3,Race == "W")
plot_data_no_bys %>% filter(Workspace == 3,Race == "W") %>% extract2("value") %>% sum
plot_data_no_bys %>% filter(Workspace == 3,Race == "O") %>% extract2("value") %>% sum
plot_data %>% filter(Workspace == 3,Race == "O") %>% extract2("value") %>% sum
plot_data %>% filter(Workspace == 3,Race == "W") %>% extract2("value") %>% sum
workspace_plot_list <- colnames(plot_data)[1:4] %>% map(~ ggplot(data = plot_data_no_bys,  aes(x = factor(Workspace), y = value,fill = factor(!!sym(.x))))+
geom_boxplot()+
xlab(.x)+
ylab("Count")+
labs(fill = .x))
workspace_plots <- ggarrange(plotlist = workspace_plot_list,ncol = 4)
workspace_plots
workspace_plots
workspace_plots <- ggarrange(plotlist = workspace_plot_list,ncol = 4)
workspace_plots
workspace_plot_list <- colnames(plot_data)[1:4] %>% map(~ ggplot(data = plot_data,  aes(x = factor(Workspace), y = value,fill = factor(!!sym(.x))))+
geom_boxplot()+
xlab(.x)+
ylab("Count")+
labs(fill = .x))
workspace_plots <- ggarrange(plotlist = workspace_plot_list,ncol = 4)
workspace_plots
workspace_plot_list
library(magrittr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(purrr)
library(reshape2)
library(ggpubr)
library(rlang)
library(caret)
library(ggcorrplot)
setwd("/home/cam/Documents/STA 138/Project")
bys_data <- read.csv("Byssinosis.csv")
knitr::opts_chunk$set(echo = TRUE)
wd <- "/home/cam/Documents/STA 138/Homework"
knitr::opts_knit$set(root.dir = wd)
library(kableExtra)
knitr::opts_chunk$set(echo = TRUE)
wd <- "/home/cam/Documents/STA 138/Homework"
knitr::opts_knit$set(root.dir = wd)
library(magrittr)
library(tidyr)
library(purrr)
library(reshape2)
library(ggpubr)
library(rlang)
library(ggcorrplot)
